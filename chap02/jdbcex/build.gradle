plugins {
  id 'java'
  id "io.freefair.lombok" version "${lombokPluginVersion}"
  id "org.gretty" version "${grettyVersion}"
  id 'war'
}

group 'org.fp024'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = "${junitVersion}"
}

sourceCompatibility = "${javaVersion}"
targetCompatibility = "${javaVersion}"

tasks.withType(JavaCompile) {
  options.encoding = "${projectEncoding}"
}

dependencies {
  implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
  implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4jVersion}"

  compileOnly "jakarta.servlet:jakarta.servlet-api:${jakartaServletApiVersion}"
  testImplementation "jakarta.servlet:jakarta.servlet-api:${jakartaServletApiVersion}"
  compileOnly "jakarta.servlet.jsp:jakarta.servlet.jsp-api:${jakartaServletJspApiVersion}"

  implementation "jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:${jakartaServletJspJstlApiVersion}"
  implementation "org.glassfish.web:jakarta.servlet.jsp.jstl:${jakartaServletJspJstlVersion}"

  implementation "org.mariadb.jdbc:mariadb-java-client:${mariadbJavaClientVersion}"
  implementation "com.zaxxer:HikariCP:${hikaricpVersion}"

  implementation "org.modelmapper:modelmapper:${modelMapperVersion}"

  implementation "org.springframework:spring-jdbc:${springVersion}"

  testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
  testImplementation "org.assertj:assertj-core:${assertJVersion}"
  testImplementation "org.mockito:mockito-core:${mockitoVersion}"
  testImplementation "org.mockito:mockito-inline:${mockitoVersion}"

  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

  testImplementation "org.springframework:spring-test:${springVersion}"
  testImplementation "org.springframework:spring-web:${springVersion}"
}

// gradle appRun 으로 실행
gretty {
  httpPort = 8080
  contextPath = "/"
  servletContainer = "tomcat10"
  inplaceMode = "hard"
  loggingLevel = "DEBUG"
  jvmArgs = [
      "--add-opens=java.base/java.io=ALL-UNNAMED",
      "--add-opens=java.base/java.lang=ALL-UNNAMED",
      "--add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED",
      "-Djava.security.egd=file:/dev/./urandom"
  ]
}

test {
  useJUnitPlatform()
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
  }
}